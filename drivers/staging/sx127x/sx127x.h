#ifndef __SX127X_H__
#define __SX127X_H__

#include <linux/types.h>

enum sx127x_ioctl_cmd {
	SX127X_IOCTL_CMD_GET_MODULATION,
	SX127X_IOCTL_CMD_SET_MODULATION,
	SX127X_IOCTL_CMD_GET_FREQ,
	SX127X_IOCTL_CMD_SET_FREQ,
	SX127X_IOCTL_CMD_GET_SF,
	SX127X_IOCTL_CMD_SET_SF,
	SX127X_IOCTL_CMD_GET_OPMODE,
	SX127X_IOCTL_CMD_SET_OPMODE,
	SX127X_IOCTL_CMD_GET_PAOUTPUT,
	SX127X_IOCTL_CMD_SET_PAOUTPUT,
	SX127X_IOCTL_CMD_GET_POWER,
	SX127X_IOCTL_CMD_SET_POWER,
	SX127X_IOCTL_CMD_GET_BW,
	SX127X_IOCTL_CMD_SET_BW,
	SX127X_IOCTL_CMD_GET_SYNCWORD,
	SX127X_IOCTL_CMD_SET_SYNCWORD,
	SX127X_IOCTL_CMD_GET_CRC,
	SX127X_IOCTL_CMD_SET_CRC,
	SX127X_IOCTL_CMD_GET_INVERTIQ,
	SX127X_IOCTL_CMD_SET_INVERTIQ,
};

enum sx127x_modulation {
	SX127X_MODULATION_FSK,
	SX127X_MODULATION_OOK,
	SX127X_MODULATION_LORA,
	SX127X_MODULATION_INVALID
};

/* the last 3 modes are only valid in lora mode */
enum sx127x_opmode {
	SX127X_OPMODE_SLEEP,
	SX127X_OPMODE_STANDBY,
	SX127X_OPMODE_FSTX,
	SX127X_OPMODE_TX,
	SX127X_OPMODE_FSRX,
	SX127X_OPMODE_RX,
	SX127X_OPMODE_RXCONTINUOS,
	SX127X_OPMODE_RXSINGLE,
	SX127X_OPMODE_CAD
};

enum sx127x_pa {
	SX127X_PA_RFO,
	SX127X_PA_PABOOST
};

struct sx127x_pkt {
	size_t len;
	size_t hdrlen;
	size_t payloadlen;

	__s16 snr;
	__s16 rssi;
	__u32 fei;
	__u8 crcfail;
} __attribute__((packed));

#endif
